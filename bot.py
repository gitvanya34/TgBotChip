from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from sqlalchemy import Column, Integer, String
from sqlalchemy.ext.declarative import declarative_base

from config import TOKEN
import keyboards as kb


bot = Bot(token=TOKEN)
dp = Dispatcher(bot)


@dp.message_handler(state='*',commands=['start'])
async def process_start_command(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç!!! –î–ª—è –Ω–∞—á–ª–∞ –≤—ã–±–µ—Ä–∏ —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å ..... ", reply_markup=kb.menu_kb)


@dp.message_handler(lambda message: message.text == '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏üß¢üëöüëñü•æ')
async def process_start_command(message: types.Message):
    await message.reply("–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–µ–π—Å—Ç–≤–∏–µ ..... ", reply_markup=kb.—Åategories_kb)


@dp.message_handler(lambda message: message.text == '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
async def process_start_command(message: types.Message):
    await message.reply("–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞ ..... ", reply_markup=kb.menu_kb)

@dp.message_handler(lambda message: message.text == '–û–±—É–≤—åü•æ')
async def process_start_command(message: types.Message):
    await message.reply(".", reply_markup=kb.product_menu_kb)
    await message.answer("–¢–æ–≤–∞—Ä 1")
    await message.answer("–¢–æ–≤–∞—Ä 2")
    await message.answer("–¢–æ–≤–∞—Ä 3")
    await message.answer("–¢–æ–≤–∞—Ä 4")




@dp.message_handler(commands=['hi2'])
async def process_hi2_command(message: types.Message):
    await message.reply("–í—Ç–æ—Ä–æ–µ - –ø—Ä—è—á–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ—Å–ª–µ –æ–¥–Ω–æ–≥–æ –Ω–∞–∂–∞—Ç–∏—è", reply_markup=kb.greet_kb2)



@dp.message_handler(commands=['help'])
async def process_help_command(message: types.Message):
    await message.reply("–ù–∞–ø–∏—à–∏ –º–Ω–µ —á—Ç–æ-–Ω–∏–±—É–¥—å, –∏ —è –æ—Ç–ø—Ä–ø–∞–≤–ª—é —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç —Ç–µ–±–µ –≤ –æ—Ç–≤–µ—Ç!")


@dp.message_handler()
async def echo_message(msg: types.Message):
    if msg.text== '–ü—Ä–∏–≤–µ—Ç':
        await bot.send_message(msg.from_user.id, '–°–∞–ª–∞–º')
    else:
        await bot.send_message(msg.from_user.id, msg.text)

# bot.py



if __name__ == '__main__':
    executor.start_polling(dp)
